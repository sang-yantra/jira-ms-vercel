generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_URL")
  referentialIntegrity = "prisma"
}

model TASK {
  ID                  Int     @id @default(autoincrement())
  TITLE               String  @db.VarChar(100)
  DESCRiPTION         String? @db.VarChar(2000)
  ACCEPTANCE_CRITERIA String? @db.VarChar(2000)
  NFR                 String? @db.VarChar(2000)
  STATUS              String  @default("NEW")
  PRIORITY            String  @default("LOW")
  ORIGINAL_ESTIMATE   Int?
  COMPLETED           Int?
  REMAINING           Int?
}

model Teams {
  Id          Bytes                     @id @db.Binary(16)
  Name        String                    @db.VarChar(200)
  Description String?                   @db.VarChar(250)
  Teams_Photo Bytes?
  Members     TeamsMembersAssociation[]
}

model Attachments {
  Id             Bytes   @id @db.Binary(16)
  Entity_Type    String? @db.VarChar(200)
  Entity_Type_Id Bytes?  @db.Binary(16)
  Name           String  @db.VarChar(200)
  Attach_File    Bytes?
}

model TeamsMembersAssociation {
  Team_Id   Bytes   @db.Binary(16)
  Team      Teams   @relation(fields: [Team_Id], references: [Id])
  Member_Id Bytes   @db.Binary(16)
  Member    Members @relation(fields: [Member_Id], references: [Id])

  @@id([Team_Id, Member_Id])
}

model Members {
  Id           Bytes                     @id @db.Binary(16)
  Name         String                    @db.VarChar(200)
  Email        String?                   @db.VarChar(100)
  Role         String                    @db.VarChar(150)
  Member_Photo Bytes?
  Teams        TeamsMembersAssociation[]
}

model PbiInfo {
  Id                  Bytes             @id @db.Binary(16)
  Team_Id             Bytes?            @db.Binary(16)
  Title               String            @db.VarChar(200)
  Type                PbiInfo_Type?
  Description         String?           @db.VarChar(250)
  Status              PbiInfo_Status?
  Acceptance_Criteria String?           @db.VarChar(250)
  Nfr                 String?           @db.VarChar(250)
  Business_Value      Int?
  Effort              Int?
  Priority            PbiInfo_Priority?
  Assigned_To         Bytes?            @db.Binary(16)
  Created_Date        DateTime?         @default(now()) @db.Timestamp(0)
  Updated_Date        DateTime?         @default(now()) @db.Timestamp(0)

  @@index([Assigned_To], map: "members_id_idx")
  @@index([Team_Id], map: "teams_id_idx")
}

model TaskInfo {
  Id                  Bytes              @id @db.Binary(16)
  Pbi_Id              Bytes?             @db.Binary(16)
  Title               String             @db.VarChar(200)
  Type                TaskInfo_Type?
  Description         String?            @db.VarChar(250)
  Status              TaskInfo_Status?
  Acceptance_Criteria String?            @db.VarChar(250)
  Nfr                 String?            @db.VarChar(250)
  Original_Estimate   Int?
  Remaining           Int?
  Completed           Int?
  Priority            TaskInfo_Priority?
  Assigned_To         Bytes?             @db.Binary(16)
  Created_Date        DateTime?          @default(now()) @db.Timestamp(0)
  Updated_Date        DateTime?          @default(now()) @db.Timestamp(0)

  @@index([Assigned_To], map: "members_id_idx")
  @@index([Pbi_Id], map: "pbiinfo_id_idx")
}

model ChatRoom {
  RoomId          Bytes      @id @db.Binary(16)
  Title           String     @db.VarChar(200)
  Description     String?    @db.VarChar(250)
  Type            Room_Type?
  RoomImage       Bytes?
  CreatedDateTime DateTime?
  CreatedBy       String     @db.VarChar(200)
}

model Chat {
  Id              Bytes     @id @db.Binary(16)
  RoomId          Bytes     @db.Binary(16)
  MemberId        Bytes     @db.Binary(16)
  MemberName      String    @db.VarChar(200)
  Description     Bytes?
  CreatedDateTime DateTime?
  CreatedBy       String    @db.VarChar(200)
  UpdatedDateTime DateTime?

  @@index([MemberId], map: "members_id_idx")
  @@index([RoomId], map: "chatroom_id_idx")
}

model ChatRoomMemberAssoc {
  Id         Bytes  @id @db.Binary(16)
  RoomId     Bytes  @db.Binary(16)
  MemberId   Bytes  @db.Binary(16)
  MemberName String @db.VarChar(200)

  @@index([MemberId], map: "members_id_idx")
  @@index([RoomId], map: "chatroom_id_idx")
}

model UserTest {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(256)
}

enum TaskInfo_Type {
  Normal
  Bug
}

enum PbiInfo_Type {
  Impedements
  Risk
  Normal
}

enum PbiInfo_Status {
  Active
  New
  Done
}

enum TaskInfo_Status {
  Active
  New
  Done
}

enum PbiInfo_Priority {
  Low
  Medium
  High
}

enum TaskInfo_Priority {
  Low
  Medium
  High
}

enum Room_Type {
  Task
  Pbi
  General
}
